*Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three
 characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

->SELECT NAME FROM STUDENTS WHERE Marks > 75 ORDER BY RIGHT(NAME, 3), ID ASC;

*Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name).
 If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

->select city,length(city)
from station 
order by length(city),city limit 1;

select city,length(city)
from station 
order by length(city) desc limit 1;

*Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.
The STATION table is described as follows:

->select count(city)-count(distinct(city)) from station;

*Query a list of CITY names from STATION for cities that have an even ID number. Print the results in any order, but exclude duplicates from the answer.

->select distinct city from station where mod(ID,2)=0;

*.......
->SELECT DISTINCT city
   FROM station
   WHERE (City not like"%a"......) ans(city not like"a%"..)

*..
->SELECT name FROM employee ORDER BY Name;

*...
->SELECT city FEOM station WHERE Substr(city,1,1) in('a','e'...);

*Sort them by assending order.
SELECT name FROM Students WHERE marks> 75 ORDER BY RIGHT(Name,30), ID ASC(for sorting in assending order);
